name: tests
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch the code
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f doc-requirements.txt ]; then pip install -r doc-requirements.txt; fi
      - name: Build the documentation
        run: make docs

  end-to-end-kustomize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Kustomize and diff
        run: DELTA_CHECK=true make kustomize
      - uses: unionai/flytectl-setup-action@v0.0.1
        name: Setup flytectl
      - name: Create Sandbox Cluster
        run: |
          flytectl config init
          flytectl sandbox start --source=$(pwd)
      - name: Uninstall Helm flyte release
        run:  flytectl sandbox exec -- helm uninstall flyte -n flyte --kubeconfig=/etc/rancher/k3s/k3s.yaml
      - name: End2End
        env:
          KUBECONFIG: /home/runner/.flyte/k3s/k3s.yaml
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
          # launch flyte end2end
          kubectl apply -n flyte -f "./deployment/test/flyte_generated.yaml"
          make end2end_execute

  end-to-end-helm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Kustomize and diff
        run: DELTA_CHECK=true make kustomize
      - name: Helm and diff
        run: DELTA_CHECK=true make helm
      - uses: unionai/flytectl-setup-action@v0.0.1
        name: Setup flytectl
      - name: Create Sandbox Cluster
        run: |
          flytectl config init
          flytectl sandbox start --source=$(pwd)
      - name: Upgrade Helm charts
        run:  flytectl sandbox exec -- helm upgrade flyte -n flyte --kubeconfig=/etc/rancher/k3s/k3s.yaml /root/charts/flyte/ -f /root/charts/flyte/values-sandbox.yaml
      - name: End2End
        env:
          KUBECONFIG: /home/runner/.flyte/k3s/k3s.yaml
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
          # launch flyte end2end
          make end2end_execute
