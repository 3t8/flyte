on:
  workflow_call:
    inputs:
      flyte-storage-bucket:
        type: string
        required: true
      aws-region:
        type: string
        required: true
      your-company:
        type: string
        required: true
      env-name:
        type: string
        required: true
      mode:
        type: string
        required: true
      components_version:
        type: string
        required: true
    secrets:
      AWS_ACCOUNT_ID:
        required: true
      AWS_IAM_ROLE_ARN_FOR_GITHUB:
        required: true
    outputs:
      dns:
        description: "dns of loadbalancer/endpoint"
        value: ${{ jobs.create-aws-opta.outputs.dns }}

jobs:
  create-aws-opta:
    name: Create AWS OPTA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: set env variables
        shell: bash
        run: |
          sed -i "s/<env_name>/${{ inputs.env-name }}/" /home/runner/work/flyte/flyte/opta/aws/env.yaml
          sed -i "s/<your_company>/${{ inputs.your-company }}/" /home/runner/work/flyte/flyte/opta/aws/env.yaml
          sed -i "s/<region>/${{ inputs.aws-region }}/" /home/runner/work/flyte/flyte/opta/aws/env.yaml
          sed -i "s/<account_id>/${{ secrets.AWS_ACCOUNT_ID }}/" /home/runner/work/flyte/flyte/opta/aws/env.yaml
      - name: Archive env artifact
        uses: actions/upload-artifact@v3
        with:
          name: opta-env
          path: |
            ./opta/aws/env.yaml
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN_FOR_GITHUB }}
          role-session-name: ApplySession
          aws-region: ${{ inputs.aws-region }}
      - name: SETUP AND APPLY OPTA
        shell: bash
        run: |
          sudo chmod +x /home/runner/work/flyte/flyte/.github/scripts/ci_helper.sh
          /home/runner/work/flyte/flyte/.github/scripts/ci_helper.sh setup_opta
          cat /home/runner/work/flyte/flyte/opta/aws/env.yaml
          opta apply -c /home/runner/work/flyte/flyte/opta/aws/env.yaml --auto-approve
          opta output -c /home/runner/work/flyte/flyte/opta/aws/env.yaml
      - name: OPTA DNS
        id: output-dns
        shell: bash
        run: |
          DNS=$(opta output -c /home/runner/work/flyte/flyte/opta/aws/env.yaml | jq -r .load_balancer_raw_dns)
          echo $DNS
          echo "::set-output name=dns::${DNS}"
      - uses: azure/setup-helm@v1
      - name: Update Helm Chart dependencies
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm dep update ./charts/flyte-core/
      - name: set flyte variables
        shell: bash
        run: |
          sed -i "s/<unique_bucket_name>/${{ inputs.flyte-storage-bucket }}/" /home/runner/work/flyte/flyte/opta/aws/flyte.yaml
          sed -i "s/<region>/${{ inputs.aws-region }}/" /home/runner/work/flyte/flyte/opta/aws/flyte.yaml
          sed -i "s/<account_id>/${{ secrets.AWS_ACCOUNT_ID }}/" /home/runner/work/flyte/flyte/opta/aws/flyte.yaml
          sed -i "s/<cluster_ingress>/${{ steps.output-dns.outputs.dns }}/" /home/runner/work/flyte/flyte/opta/aws/flyte.yaml
      - name: Archive env artifact
        uses: actions/upload-artifact@v3
        with:
          name: opta-flyte
          path: |
            /home/runner/work/flyte/flyte/opta/aws/flyte.yaml
      - name: Pin terraform version
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
          terraform_wrapper: false
      - name: Pin Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: setup node 16.8.0
        uses: actions/setup-node@v2
        with:
          node-version: "16.8.0"
      - name: SETUP OPTA & APPLY FLYTE
        shell: bash
        run: |
          cd /home/runner/work/flyte/flyte/opta/aws
          opta apply -c flyte.yaml --auto-approve
    outputs:
      dns: ${{ steps.output-dns.outputs.dns }}
