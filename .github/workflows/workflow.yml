on:
  push:
    branches:
      - opta-aws
  workflow_dispatch:
    inputs:
      mode:
        description: "Mode of operation (either nightly or release)"
        required: true
        default: "nightly"
        type: choice
        options:
          - nightly
          - release
      components_version:
        description: "Version used by all components. Leave as latest for the nightly runs and pick a flyte release version in case of a release test (e.g. the full string \"v0.18.2\")"
        required: true
        default: "latest"
        type: string

permissions:
  id-token: write
  contents: read

env:
  ENV_NAME: development
  YOUR_COMPANY: bamboozoology
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: "${{ secrets.AWS_ACCOUNT_ID }}"
  FLYTE_STORAGE_BUCKET: flyte-unique-nooverlap-bucket-123456

jobs:
  calculate-pre-reqs:
    # TODO: UPDATE THIS TO RELEVANT LOCATION ...
    # likely: flyteorg/flyte.github/workflows/calculate_pre_reqs.yml@main
    uses: brucearctor/flyte/.github/workflows/calculate_pre_reqs.yml@opta-aws
    with:
      mode: ${{ github.event.inputs.mode }}
      components_version: ${{ github.event.inputs.components_version }}
  run-testing-workflows:
    runs-on: ubuntu-latest
    needs: calculate-pre-reqs
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: set env variables
      shell: bash
      run: |
        sed -i "s/<env_name>/$ENV_NAME/" ./opta/aws/env.yaml
        sed -i "s/<your_company>/$YOUR_COMPANY/" ./opta/aws/env.yaml
        sed -i "s/<region>/$AWS_REGION/" ./opta/aws/env.yaml
        sed -i "s/<account_id>/$AWS_ACCOUNT_ID/" ./opta/aws/env.yaml
    - name: Archive env artifact
      uses: actions/upload-artifact@v3
      with:
        name: opta-env
        path: |
          ./opta/aws/env.yaml
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        # This aws account should have admin permissions
        #aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        #aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-to-assume: "arn:aws:iam::896381257720:role/GitHubAdmin"
        aws-region: ${{ env.AWS_REGION }}
        role-session-name: ApplySession
    - name: SETUP AND APPLY OPTA
      shell: bash
      run: |
        sudo chmod +x .github/scripts/ci_helper.sh
        .github/scripts/ci_helper.sh setup_opta
        opta apply -c ./opta/aws/env.yaml --auto-approve 
        opta output -c ./opta/aws/env.yaml
    - name: OPTA DNS 
      id: opta-dns
      shell: bash
      run: |
        cat ./opta/aws/env.yaml
        DNS=$(opta output -c ./opta/aws/env.yaml | jq -r .load_balancer_raw_dns)
        echo ""
        echo $DNS
        echo "::set-output name=dns::${DNS}"
    - uses: azure/setup-helm@v1
    - name: Update Helm Chart dependencies
      uses: WyriHaximus/github-action-helm3@v2
      with:
        exec: helm dep update ./opta/helm/
    - name: Pin terraform version
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0
        terraform_wrapper: false
    - name: Pin Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: actions/setup-node@v2
      with:
        node-version: "16.8.0"
    - name: Prepare opta changes
      env:
        LC_ALL: en_US.UTF-8
        LANG: en_US.UTF-8
        LANGUAGE: en_US.UTF-8
        ENV:  "${{ needs.calculate-pre-reqs.outputs.mode }}"
        FLYTEADMIN_TAG: "$${{ needs.calculate-pre-reqs.outputs.components_version }}"
        DATACATALOG_TAG: "${{ needs.calculate-pre-reqs.outputs.components_version }}"
        FLYTECONSOLE_TAG: "${{ needs.calculate-pre-reqs.outputs.components_version }}"
        FLYTEPROPELLER_TAG: "${{ needs.calculate-pre-reqs.outputs.components_version }}"
        OPTA_ENVIRONMENT: "${{ needs.calculate-pre-reqs.outputs.mode }}"
      run: |
        .github/scripts/ci_helper.sh prepare_flyte_release_build
        .github/scripts/ci_helper.sh prepare_helm_chart
    - name: set flyte variables
      shell: bash
      run: |
        sed -i "s/<unique_bucket_name>/${{ env.FLYTE_STORAGE_BUCKET }}/" ./opta/aws/flyte.yaml
        sed -i "s/<region>/${{ env.AWS_REGION }}/" ./opta/aws/flyte.yaml
        sed -i "s/<account_id>/${{ env.AWS_ACCOUNT_ID }}/" ./opta/aws/flyte.yaml
        sed -i "s/<cluster_ingress>/${{ steps.opta-dns.outputs.dns }}/" ./opta/aws/flyte.yaml
    - name: view flyte.yaml
      shell: bash
      run: |
        cat ./opta/aws/flyte.yaml
    - name: Archive env artifact
      uses: actions/upload-artifact@v3
      with:
        name: opta-flyte
        path: |
          ./opta/aws/flyte.yaml
    - name: OPTA APPLY FLYTE
      shell: bash
      run: |
        cd opta/aws
        opta apply -c flyte.yaml --auto-approve
        sudo rm flyte.yaml
        sudo rm env.yaml
    - name: Setup flytectl
      uses: unionai-oss/flytectl-setup-action@v0.0.1
    - name: see files
      shell: bash
      run: |
        ls 
    - name: update configs
      env:
        DNS: ${{ steps.opta-dns.outputs.dns }}
      shell: bash
      run: |
        echo $DNS
        sed -i "s/<dns_of_cluster>/$DNS/" .github/ci_config/config.yaml
        sed -i "s/<dns_of_cluster>/$DNS/" .github/ci_config/config
    - name: see config files
      shell: bash
      run: |
        cat .github/ci_config/config.yaml
        cat .github/ci_config/config
    - name: check version
      env:
        OMG_VERSION: "${{ needs.calculate-pre-reqs.outputs.components_version }}"
      shell: bash
      run: |
        echo $OMG_VERSION
    - name: Register flytesnacks examples
      uses: unionai/flyte-register-action@v0.0.2
      with:
        flytesnacks: true
        project: flytesnacks
        version: "${{ needs.calculate-pre-reqs.outputs.components_version }}"
        domain: development
        config: .github/ci_config/config.yaml
    - name: Setup Flytekit
      env:
        DNS: ${{ steps.opta-dns.outputs.dns }}
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install flytekit
        pip freeze
    # TODO: add a badge for when test is running
    - name: Run tests
      id: run-tests
      env:
        VERSION: "${{ needs.calculate-pre-reqs.outputs.components_version }}"
        PRIORITIES: P0,P1
        # TODO REMOVE BELOW FLYTE_SDK_USE_STRUCTURED_DATASET ONCE ON v1
        FLYTE_SDK_USE_STRUCTURED_DATASET: "TRUE"
      shell: bash
      run: |
        run_tests_output=$(./boilerplate/flyte/end2end/end2end.sh .github/ci_config/config )
        echo "$run_tests_output"  # for debugging purposes
        badges=$(echo "$run_tests_output" | tail -n1)
        echo "$badges"  # for debugging purposes
        echo ::set-output name=badges::${badges}
    # TODO: Add a slack update after tests run
  destroy-cluster:
    # TODO: UPDATE THIS TO RELEVANT LOCATION ...
    # likely: flyteorg/flyte.github/workflows/calculate_pre_reqs.yml@main
    uses: brucearctor/flyte/.github/workflows/destroy_cluster.yml@opta-aws
    needs:
      - calculate-pre-reqs
      - run-testing-workflows
