on:
  workflow_call:
    inputs:
      mode:
        type: string
        required: true
      components_version:
        type: string
        required: true
      aws-region:
        type: string
        required: true

jobs:
  create-opta-flyte:
    name: Create FLYTE OPTA
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # TODO: ROLE TO BE SECRET?
          role-to-assume: "arn:aws:iam::896381257720:role/GitHubAdmin"
          aws-region: ${{ inputs.aws-region }}
          role-session-name: ApplySession
      - name: Checkout repo
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        id: download-flyte-yaml
        name: download env yaml
        with:
          name: opta-flyte
          path: /home/runner/work/flyte/flyte/opta/cloud
      - uses: actions/download-artifact@v3
        name: download env yaml
        id: download-env-yaml
        with:
          name: opta-env
          path: /home/runner/work/flyte/flyte/opta/cloud
      - uses: azure/setup-helm@v1
      - name: Update Helm Chart dependencies
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm dep update /home/runner/work/flyte/flyte/opta/helm/
      - name: Pin terraform version
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
          terraform_wrapper: false
      - name: Pin Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/setup-node@v2
        with:
          node-version: "16.8.0"
      - name: Prepare opta changes
        env:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          LANGUAGE: en_US.UTF-8
          ENV: "${{ inputs.mode }}"
          FLYTEADMIN_TAG: "${{ inputs.components_version }}"
          DATACATALOG_TAG: "${{inputs.components_version }}"
          FLYTECONSOLE_TAG: "${{ inputs.components_version }}"
          FLYTEPROPELLER_TAG: "${{ inputs.components_version }}"
          OPTA_ENVIRONMENT: "${{ inputs.mode }}"
        run: |
          /home/runner/work/flyte/flyte/.github/scripts/ci_helper.sh prepare_flyte_release_build
          /home/runner/work/flyte/flyte/.github/scripts/ci_helper.sh prepare_helm_chart
      - name: SETUP OPTA & APPLY FLYTE
        shell: bash
        run: |
          sudo chmod +x /home/runner/work/flyte/flyte/.github/scripts/ci_helper.sh
          /home/runner/work/flyte/flyte/.github/scripts/ci_helper.sh setup_opta
          cd /home/runner/work/flyte/flyte/opta/cloud
          opta apply -c flyte.yaml --auto-approve