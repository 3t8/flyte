on:
  workflow_call:
    inputs:
      dns:
        type: string
        required: true
      components_version:
        type: string
        required: true

jobs:
  run-tests:
    name: flytekit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup flytectl
        uses: unionai-oss/flytectl-setup-action@v0.0.1
      - name: update configs
        shell: bash
        run: |
          sed -i "s/<dns_of_cluster>/${{ inputs.dns }}/" /home/runner/work/flyte/flyte/.github/ci_config/config.yaml
      - name: see config files
        shell: bash
        run: |
          cat .github/ci_config/config.yaml
          cat .github/ci_config/config
      - name: check version
        env:
          OMG_VERSION: ${{ inputs.components_version }}
        shell: bash
        run: |
          echo $OMG_VERSION
      - name: Register flytesnacks examples
        uses: unionai-oss/flyte-register-action@v0.0.2
        with:
          flytesnacks: true
          project: flytesnacks
          version: ${{ inputs.components_version }}
          domain: development
          config: /home/runner/work/flyte/flyte/.github/ci_config/config.yaml
    - name: Setup Flytekit
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install flytekit
    # TODO: add a badge for when test is running
    - name: Run tests
      id: run-tests
      env:
        VERSION: ${{ needs.calculate-pre-reqs.outputs.components_version }}
        PRIORITIES: P0,P1
      shell: bash
      run: |
        run_tests_output=$(/home/runner/work/flyte/flyte/./boilerplate/flyte/end2end/end2end.sh /home/runner/work/flyte/flyte/.github/ci_config/config.yaml )
        echo "$run_tests_output"  # for debugging purposes
        badges=$(echo "$run_tests_output" | tail -n1)
        echo "$badges"  # for debugging purposes
        echo ::set-output name=badges::${badges}
    # TODO: Add a slack update after tests run
